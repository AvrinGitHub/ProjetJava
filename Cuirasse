/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bataillenavaleprojet.Controleur;


import bataillenavaleprojet.Modele.Grille;
import bataillenavaleprojet.Modele.Navire;
import bataillenavaleprojet.Modele.PlacementBateau;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author bastien
 */
public class Cuirasse extends Navire {
    
    public static boolean detecterSiOk(int i, int j , int orientation , int typeBateau , int ligneTab , int[][] coordonnee){// ligneTab pour savoir quelle ligne modifier dans coordonnee apres 
        
        for (int z=0 ; z<10 ; z++ ){
            if (coordonnee[z][0]==i && coordonnee[z][1]== j && coordonnee[z][2]==orientation && coordonnee[z][3]==typeBateau && coordonnee[z][4]==1){
               ligneTab=z;
               return true;
            }
        }
        return false;     
    }

    public static void choixSens(String [][] tableAllie, String[][] tableAllieTir, String[][] tableIa, String[][] tableIaTir, int i, int j, int tourJoueur , int[][] coordonneBateauAllie , int[][] coordonneBateauIa) throws IOException, FileNotFoundException, EntierNegatifException, EntierTropGrand {
        //variables
        int nombreChoix = 0;
        int orientation = 0;
        int itemp=i;
        int jtemp=j;
        int ligneTab = 0;
        boolean test= false; 
        
        if (tourJoueur%2==0){
            System.out.println("Dans quel sens est oriente le cuirasse ? 1 H 2 V");
            try{
            
            String entree = new Scanner(System.in).nextLine();
            orientation = Integer.parseInt(entree);
            if (orientation<1){
                throw new EntierNegatifException();
            }
            else if(orientation>2){
                throw new EntierTropGrand();
            }
        }
            
        catch (NumberFormatException e){
            System.out.println("pas de caractere. 1 ou 2!!");
            MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
        }   
        catch (EntierNegatifException e2){
            System.out.println("1 ou 2!!");
            MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
        }
        catch (EntierTropGrand e3){
            System.out.println("entier trop grand. 1 ou 2!!");
            MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);   
        }    
            test=detecterSiOk( i , j , orientation , 4 , ligneTab , coordonneBateauAllie);
        }
        else if (tourJoueur%2==1){
            int max = 2;
            int min = 1;
            orientation = (int)(Math.random()* (max - min + min) + min);
            test=detecterSiOk( i , j , orientation , 4 , ligneTab , coordonneBateauIa);
        }
        //Horizontal
        
            
            if ((test==true)&& (orientation==1)) {//bateau horizontal
                
                if (tourJoueur%2==0){
                    System.out.println("Dans quel sens souhaitez-vous déplacer le cuirasse ?");
                    System.out.println(" Selectionner 1,2 ou 3. \n 1: Deplacer vers la droite \n 2. Deplacer vers la gauche \n 3: retour au menu");
                    try{
            
                    String entree = new Scanner(System.in).nextLine();
                    nombreChoix = Integer.parseInt(entree);
                    if (nombreChoix<0){
                        throw new EntierNegatifException();
        
                    }
                }
            
                catch (NumberFormatException e){
                    System.out.println("Veuillez saisir un entier.");
                }   
                catch (EntierNegatifException e2){
                    System.out.println("Veuillez saisir un entier positif.");
                }
                }
                else if (tourJoueur%2==1){
                    int max = 2;
                    int min = 1;
                    nombreChoix = (int)(Math.random()* (max - min + min) + min);
                }
                switch( nombreChoix ) {
                    case 1: //droite 
                        
                                if (tourJoueur%2==0 && j+6!=14 && tableAllie[i][j+7].equals("  ")){//test case vide et deplacement possible joueur 
                                    tableAllie[i][j]="  ";//deplacement bateau 
                                    tableAllie[i][j+7]="**";
                                    coordonneBateauAllie[ligneTab][1]= j+1;//modif coordonne bateau joueur 
                                    Grille.afficheGrille(tableAllie);//affiche la grille apres deplacement
                                    
                                }
                                else if (tourJoueur%2==1 && j+6!=14 && tableIa[i][j+7].equals("  ")){//test deplacement Ia
                                    tableIa[i][j]="  ";//deplacement bateau
                                    tableIa[i][j+7]="**";
                                    coordonneBateauIa[ligneTab][1]= j+1;//modif coordonne bateau Ia
                                    
                                }
                            else{//si deplacement impossible retour au debut du tour 
                                if (tourJoueur%2==0){
                                    System.out.println("Deplacement impossible.");
                                    System.out.println("Veuillez choisir une nouvelle action.");
                                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur, coordonneBateauAllie , coordonneBateauIa);
                                }
                                else if (tourJoueur%2==1){
                                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur, coordonneBateauAllie , coordonneBateauIa);
                                }
                            }
                        break;
                    case 2://gauche 
                       
                                if (tourJoueur%2==0 && j!=0 && tableAllie[i][j-1].equals("  ")){//test deplacement joueur 
                                    tableAllie[i][j-1]="**";//deplacement 
                                    tableAllie[i][j+6]="  ";
                                    coordonneBateauAllie[ligneTab][1]= j-1;//modif coordonne bateau joueur
                                    Grille.afficheGrille(tableAllie);//affiche grille apres deplacement 
                                    
                                }
                                else if (tourJoueur%2==1 && j!=0 && tableIa[i][j-1].equals("  ")){//test deplacement Ia
                                    tableIa[i][j-1]="**";//deplacement 
                                    tableIa[i][j+6]="  ";
                                    coordonneBateauIa[ligneTab][1]= j-1;//modif coordonne bateau Ia
                                    
                                }
                            
                            else{
                                if (tourJoueur%2==0){//si deplacement impossible retour debut du tour 
                                    System.out.println("Deplacement impossible.");
                                    System.out.println("Veuillez choisir une nouvelle action.");
                                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur, coordonneBateauAllie , coordonneBateauIa);
                                }
                                else if (tourJoueur%2==1){
                                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }
                            }
                        break;
                        
                    case 3://retour menu
                        MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur, coordonneBateauAllie , coordonneBateauIa);
                    default:
                        if (tourJoueur%2==0){
                            System.out.println( "Entre 1 et 3 svp" );
                            MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie ,coordonneBateauIa);
                        }
                        else if (tourJoueur%2==1){
                            MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                        }
                    }
                }
        //Vertical
            else if ((test==true)&& (orientation==2)){
                if (tourJoueur%2==0){
                    System.out.println("Dans quel sens souhaitez-vous déplacer le cuirasse ?");
                    System.out.println(" Selectionner 1 ou 2. \n 1: Deplacer vers le haut \n 2. Deplacer vers le bas \n 3: retour au menu");
                    try{
            
                    String entree = new Scanner(System.in).nextLine();
                    nombreChoix = Integer.parseInt(entree);
                    if (nombreChoix<0){
                        throw new EntierNegatifException();
        
                    }
                }
            
                catch (NumberFormatException e){
                    System.out.println("Veuillez saisir un entier.");
                }   
                catch (EntierNegatifException e2){
                    System.out.println("Veuillez saisir un entier positif.");
                }
                }
                else if (tourJoueur%2==1){
                    int max = 2;
                    int min = 1;
                    nombreChoix = (int)(Math.random()* (max - min + min) + min);
                }
                switch( nombreChoix ) {
                    case 1: //haut
                        
                                if (tourJoueur%2==0 && i!=0 && tableAllie[i-1][j].equals("  ")){//test deplacement joueur 
                                    tableAllie[i-1][j]="**";//deplacement 
                                    tableAllie[i+6][j]="  ";
                                    coordonneBateauAllie[ligneTab][0]= i-1;//modif coordonne bateau joueur
                                    Grille.afficheGrille(tableAllie);//affiche grille apres deplacement 
                                    
                                }
                                else if (tourJoueur%2==1 && i!=0 && tableIa[i-1][j].equals("  ")){//test deplacement ordi
                                    tableIa[i-1][j]="**";//deplacement 
                                    tableIa[i+6][j]="  ";
                                    coordonneBateauIa[ligneTab][0]= i-1;//modif coordonne bateau Ia
                                    
                                }
                            
                                else{//si deplacement impossible retour menu
                                
                                    if (tourJoueur%2==0){
                                        System.out.println("Deplacement impossible.");
                                        System.out.println("Veuillez choisir une nouvelle action.");
                                        MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                    }
                                    else if (tourJoueur%2==1){
                                        MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                    }
                                }
                        break;
                    case 2: //bas
                        
                                if (tourJoueur%2==0 && i+6!=14 && tableAllie[i+7][j].equals("  ")){//test deplacement joueur
                                    tableAllie[i+7][j]="**";//deplacement 
                                    tableAllie[i][j]="  ";
                                    coordonneBateauAllie[ligneTab][0]= i+1;//modif coordonne bateau joueur 
                                    Grille.afficheGrille(tableAllie);//affiche grille apres deplacement 
                                    
                                }
                                else if (tourJoueur%2==1 && i+6!=14 && tableIa[i+7][j].equals("  ")){//test deplacement Ia
                                    tableIa[i+7][j]="**";//deplacement 
                                    tableIa[i][j]="  ";
                                    coordonneBateauIa[ligneTab][0]= i+1;//modif coordonne bateau Ia
                                    
                                }
                            
                            else{//si deplacement impossible retour menu 
                                if (tourJoueur%2==0){
                                    System.out.println("Deplacement impossible.");
                                    System.out.println("Veuillez choisir une nouvelle action.");
                                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }
                                else if (tourJoueur%2==1){
                                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }
                            }
                        break;
                        
                    case 3://retour menu
                        MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                    default:
                        if (tourJoueur%2==0){
                            System.out.println( "Entre 1 et 3 svp" );
                            MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                        }
                        else if (tourJoueur%2==1){
                            MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                        }
                }
            }
            else{
                if (tourJoueur%2==0){
                    System.out.println("Vous avez mal sélectionné ou alors le bateau est touche voire coule");
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
                else if (tourJoueur%2==1){
                MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }    
            }
        }
    
    @Override
    public void Tir(String [][] tableAllie, String[][] tableAllieTir, String[][] tableIa, String[][] tableIaTir, int tourJoueur, int[][] coordonneBateauAllie , int[][] coordonneBateauIa) {
        int caseTiri=0,caseTirj=0;
        if (tourJoueur%2==0){
            System.out.println("Selectionnez la case sur laquelle vous souhaitez tirer :(pas sur les premiereres et dernieres colonnes ou lignes)");
            
            System.out.print("Ligne : ");
            try{//demande de la ligne avec blindage et retour menu en cas d'erreur 
            
                    String entree = new Scanner(System.in).nextLine();
                    caseTiri = Integer.parseInt(entree);
                    if (caseTiri<1){
                        throw new EntierNegatifException();
                    }
                    else if(caseTiri>13){
                        throw new EntierTropGrand();
                    }
                }
            
                catch (NumberFormatException e){
                    System.out.println("Veuillez saisir un entier.");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
                }   
                catch (EntierNegatifException e2){
                    System.out.println("Veuillez saisir un entier strictement positif.Entre 1 et 13 svp");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                catch (EntierTropGrand e3){
                    System.out.println("Entier trop grand. Entre 1 et 13 svp");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
            System.out.println("");
            System.out.print("Colonne : ");
            try{//demande de la colonne avec blindage et retour menu en cas d'erreur 
            
                    String entree = new Scanner(System.in).nextLine();
                    caseTirj = Integer.parseInt(entree);
                    if (caseTirj<0){
                        throw new EntierNegatifException();
        
                    }
                    else if(caseTirj>14){
                        throw new EntierTropGrand();
                    }
                }
            
                catch (NumberFormatException e){
                    System.out.println("Veuillez saisir un entier.");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
                }   
                catch (EntierNegatifException e2){
                    System.out.println("Veuillez saisir un entier positif.");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                catch (EntierTropGrand e3){
                    System.out.println("entier trop grand. Entre 0 et 14 svp");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
            System.out.println("");   
        }
        else if(tourJoueur%2==1){
            int max=14;
            int min=0;
            caseTiri= (int)(Math.random()* (max - min + 1) + min );
            caseTirj= (int)(Math.random()* (max - min + 1) + min );
        }
        if (tourJoueur%2==0){//tir Joueur
            if(caseTiri>=1 && caseTiri<14 && caseTirj>=1 && caseTirj<14){     
            if(tableIa[caseTiri][caseTirj].equals("  ") || tableIa[caseTiri][caseTirj].equals("SS") || tableIa[caseTiri][caseTirj].equals("XX")){//test pas touche
                System.out.println("Le tir a echoue. Vous n'avez rien touche.");
                
            }
            else{//donc touche 
                System.out.println("Touche !");
                tableAllieTir[caseTiri][caseTirj]="XX";//modifie grille tir 
                tableIa[caseTiri][caseTirj] = "XX";//modifie grille Ia
                for(int k=-1; k<2; k++){
                    for(int q=-1; q<2; q++){
                        if (tableIa[caseTiri+k][caseTirj+q].equals("  ") || tableIa[caseTiri+k][caseTirj+q].equals("SS") || tableAllieTir[caseTiri+k][caseTirj+q].equals("XX")){
                        }
                        else{
                            System.out.println("Degats collateraux !");
                            tableAllieTir[caseTiri+k][caseTirj+q] = "XX";//modif table tir joueur
                            tableIa[caseTiri+k][caseTirj+q] = "XX";//modif table Ia
                        }
                    }
                }
                PlacementBateau.TestCoule(tableIa,coordonneBateauIa);//modifie coordonne Bateau Ia car si touche il ne peut plus se deplacer 
                try {
                    MenuDuJeu.TestFinDePartie(tourJoueur , tableAllie, tableIa);//test fin de partie si tous les bateaux coules 
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        }
        else{
                System.out.println("votre demande n'est pas correcte. Veuillez rejouer!");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        }
        if (tourJoueur%2==1){//ordi 
            if(caseTiri>=0 && caseTiri<15 && caseTirj>=0 && caseTirj<15){     
                if(tableAllie[caseTiri][caseTirj].equals("  ") || tableAllie[caseTiri][caseTirj].equals("SS") || tableAllie[caseTiri][caseTirj].equals("XX")){
                
                
            }
            else{
                
                tableIaTir[caseTiri][caseTirj]="XX";//modif table Ia tir 
                tableAllie[caseTiri][caseTirj] = "XX";//modif table joueur 
                for(int k=-1; k<2; k++){
                    for(int q=-1; q<2; q++){
                        if (tableAllie[caseTiri+k][caseTirj+q].equals("  ") || tableAllie[caseTiri+k][caseTirj+q].equals("SS") || tableAllie[caseTiri+k][caseTirj+q].equals("XX")){
                        }
                        else{
                            
                            tableIaTir[caseTiri+k][caseTirj+q] = "XX";//modif table Ia tir 
                            tableAllie[caseTiri+k][caseTirj+q] = "XX";//modif table joueur 
                        }
                    }
                }
                PlacementBateau.TestCoule(tableAllie,coordonneBateauAllie);//modif coordonne bateau allie en cas de touche et bateau touche=peut pas se deplacer 
                try {
                    MenuDuJeu.TestFinDePartie(tourJoueur , tableAllie, tableIa);//test tous les bteaux coules pour fin de partie 
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        }
        else{
                try {
                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        }
        
    }
    
    @Override
    public void Deplacement(String[][] tableAllie, String[][] tableAllieTir, String[][] tableIa, String[][] tableIaTir, String cuirasse, int i, int j, int tourJoueur, int[][] coordonneBateauAllie, int[][] coordonneBateauIa) {
        if (cuirasse.equals("**")){//test sur la case selectionne 
            try {         
                choixSens(tableAllie, tableAllieTir, tableIa, tableIaTir , i, j, tourJoueur , coordonneBateauAllie , coordonneBateauIa);
            } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            if (tourJoueur%2==0){
                System.out.println("Selection impossible");
                System.out.println("Recommencez");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (tourJoueur%2==1){
                try {
                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(Cuirasse.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
        }
    }
}

