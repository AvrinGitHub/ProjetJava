/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetjava;

import java.util.Scanner;

/**
 *
 * @author Admin
 */
public class Destroyer extends Navire {
    
    public static int testCaseHaut(String[][] Grille, int i, int j){
        int compteur=0;
        for (int k=j; k<j+3 ; k++){
            if (Grille[i-1][k]=="  "){
            compteur++;
            }
        }
        return compteur;
        ujz
    }
    
    public static int testCaseBas(String[][] Grille, int i, int j){
        int compteur=0;
        for (int k=j; k<j+3 ; k++){
            if (Grille[i+1][k]=="  "){
            compteur++;
            }
        }
        return compteur;
    }
    
    public static int testCaseDroite(String[][] Grille, int i, int j){
        int compteur=0;
        for (int k=i; k<i+3 ; k++){
            if (Grille[k][j+1]=="  "){
            compteur++;
            }
        }
        return compteur;
    }
    
    public static int testCaseGauche(String[][] Grille, int i, int j){
        int compteur=0;
        for (int k=i; k<i+3 ; k++){
            if (Grille[k][j-1]=="  "){
            compteur++;
            }
        }
        return compteur;
    }

    public static boolean detecterSiOk(int i, int j , int orientation , int typeBateau , int ligneTab , int[][] coordonnee){// ligneTab pour savoir quelle ligne modifier dans coordonnee apres 
        
        for (int z=0 ; z<10 ; z++ ){
            if (coordonnee[z][0]==i && coordonnee[z][1]== j && coordonnee[z][2]==orientation && coordonnee[z][3]==typeBateau && coordonnee[z][4]==1){
               ligneTab=z;
               return true;
            }
        }
        return false;     
    }
    
    public static void choixSens(String[][] Grille, int i, int j , int tourJoueur , int[][] coordonneBateauAllie , int[][] coordonneBateauIa) {
        int nombreChoix = 0;
        int orientation = 0;
        int itemp=i;
        int jtemp=j;
        int ligneTab = 0;
        boolean test = false;
        
        if (tourJoueur%2==0){
            System.out.println("Dans quel sens est oriente le destroyer ?");
            System.out.println("Horizontal : 1");
            System.out.println("Vertical : 2");
            orientation = new Scanner(System.in).nextInt();
            test=detecterSiOk( i , j , orientation , 2 , ligneTab , coordonneBateauAllie);
        }
        if (tourJoueur%2==1){
            int max = 2;
            int min = 1;
            orientation = (int)(Math.random()* (max - min + min) + min);
            test=detecterSiOk( i , j , orientation , 2 , ligneTab , coordonneBateauIa);
        }
        
        //Horizontal
            if((test==true)&&(orientation==1)){
                if (tourJoueur%2==0){
                    System.out.println("Dans quel sens souhaitez-vous déplacer le destroyer ?");
                    System.out.println(" Selectionner 1 ou 2. \n 1: Deplacer vers la droite \n 2. Deplacer vers la gauche");
                    nombreChoix = new Scanner(System.in).nextInt();
                }
                if (tourJoueur%2==1){
                    int max = 2;
                    int min = 1;
                    nombreChoix = (int)(Math.random()* (max - min + min) + min);
                }
                switch( nombreChoix ) {
                    case 1: 
                        if(j+2!=14 && Grille[i][j+3].equals("  ")){
                                Grille[i][j]="  ";
                                Grille[i][j+3]="++";
                                if (tourJoueur%2==0){
                                    coordonneBateauAllie[ligneTab][1]= j+1;              
                                }
                                if (tourJoueur%2==1){
                                    coordonneBateauIa[ligneTab][1]= j+1;
                                }
                            }
                            else{
                                if (tourJoueur%2==0){
                                    System.out.println("Deplacement impossible.");
                                    System.out.println("Veuillez choisir une nouvelle action.");
                                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie ,coordonneBateauIa);
                                }
                                if (tourJoueur%2==1){
                                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }
                            }
                        break;
                    case 2:
                        if(j!=0 && Grille[i][j-1].equals("  ")){
                                Grille[i][j-1]="++";
                                Grille[i][j+2]="  ";
                                if (tourJoueur%2==0){
                                    coordonneBateauAllie[ligneTab][1]= j-1;              
                                }
                                if (tourJoueur%2==1){
                                    coordonneBateauIa[ligneTab][1]= j-1;
                                }
                            }
                            else{
                                if (tourJoueur%2==0){
                                    System.out.println("Deplacement impossible.");
                                    System.out.println("Veuillez choisir une nouvelle action.");
                                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }       
                                if (tourJoueur%2==1){
                                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }
                            }
                        break;
                    default:
                        if (tourJoueur%2==0){
                            System.out.println( "Entre 1 et 2 svp" );
                            MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                        }
                        if (tourJoueur%2==1){
                            MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                        }
                    }
            }
                 
        //Vertical
            if((test==true)&&(orientation==2)){
                if (tourJoueur%2==0){
                    System.out.println("Dans quel sens souhaitez-vous déplacer le destroyer ?");
                    System.out.println(" Selectionner 1 ou 2. \n 1: Deplacer vers le haut \n 2. Deplacer vers le bas \n");
                    nombreChoix = new Scanner(System.in).nextInt();
                }
                if (tourJoueur%2==1){
                    int max = 2;
                    int min = 1;
                    nombreChoix = (int)(Math.random()* (max - min + min) + min);
                }
                switch( nombreChoix ) {
                    case 1: 
                        if(i!=0 && Grille[i-1][j].equals("  ")){
                                Grille[i-1][j]="++";
                                Grille[i+2][j]="  ";
                                if (tourJoueur%2==0){
                                    coordonneBateauAllie[ligneTab][0]= i-1;              
                                }
                                if (tourJoueur%2==1){
                                    coordonneBateauIa[ligneTab][0]= i-1;
                                }
                            }
                            else{
                                if (tourJoueur%2==0){
                                    System.out.println("Deplacement impossible.");
                                    System.out.println("Veuillez choisir une nouvelle action.");
                                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }
                                if (tourJoueur%2==1){
                                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }
                            }
                        break;
                    case 2: 
                        if(i+2!=14 && Grille[i+3][j].equals("  ")){
                                Grille[i+3][j]="++";
                                Grille[i][j]="  ";
                                if (tourJoueur%2==0){
                                    coordonneBateauAllie[ligneTab][0]= i+1;              
                                }
                                if (tourJoueur%2==1){
                                    coordonneBateauIa[ligneTab][0]= i+1;
                                }
                            }
                            else{
                                
                                if (tourJoueur%2==0){
                                    System.out.println("Deplacement impossible.");
                                    System.out.println("Veuillez choisir une nouvelle action.");
                                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }
                                if (tourJoueur%2==1){
                                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                                }
                            }
                        break;
                    default:
                        System.out.println( "Entre 1 et 2 svp" );
                        if (tourJoueur%2==0){
                            MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                        }
                        if (tourJoueur%2==1){
                            MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                        }
                }
            }
            else{
                if (tourJoueur%2==0){
                    System.out.println("Selection impossible.");
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
                if (tourJoueur%2==1){
                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
            
        }
    }
    
    @Override
    public void Tir(String navire) {
        
    }

    @Override
    public void Deplacement(String destroyer, String[][] Grille, int i, int j , int tourJoueur , int[][] coordonneBateauAllie , int[][] coordonneBateauIa) {
        if (destroyer.equals("++")){
            choixSens(Grille, i, j , tourJoueur , coordonneBateauAllie, coordonneBateauIa);         
        }
        else{
            if (tourJoueur%2==0){
                System.out.println("Selection impossible");
                System.out.println("Recommencez");
                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie, coordonneBateauIa);
            }
            if (tourJoueur%2==1){
                MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie, coordonneBateauIa );
            }
        }
    }    
}
