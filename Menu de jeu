package projetjava;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.* ; 


public class MenuDuJeu {
    public class MenuDuJeu {
    
    public static void menu(int tourJoueur) throws IOException {
        tourJoueur=0;              
        int nombreMenu;

        String [][] tableAllie = Grille.creaGrille();
        String[][] tableAllieTir = Grille.creaGrille();
        String[][] tableIa = Grille.creaGrille();
        String[][] tableIaTir = Grille.creaGrille();
        
        System.out.println(" sélectionner 1, 2, 3 ou 4. \n 1: Jouer une partie \n 2. Charger une partie \n 3. Aide (doit expliquer clairement les règles du jeu et les touches du clavier à utiliser lors d’une partie) \n 4. Quitter");
        nombreMenu = new Scanner(System.in).nextInt();
        switch( nombreMenu ) {
            
            case 1: //lancer une partie 
                int[][] coordonneBateauAllie = null;
                int[][] coordonneBateauIa = null; 
                PlacementBateau.placement(tableAllie , coordonneBateauAllie);
                PlacementBateau.placement(tableIa , coordonneBateauIa);

                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                break;
            case 2: //charger une partie 
               ChargementPartie.chargerUnePartie(tableAllie, tableAllieTir, tableIa, tableIaTir);

                break;
            case 3: //afficher l'aide 
                Aide.afficherRegles();
                break;
            case 4: //quitter le jeu 
                System.out.println("Merci d'avoir joue.");
                break;
            default:
                System.out.println( "Entre 1 et 4 svp" );
                menu(tourJoueur);
        }
        
    }

    public static void menuDuTour(String [][] tableAllie, String[][] tableAllieTir, String[][] tableIa, String[][] tableIaTir, int tourJoueur, int[][] coordonneBateauAllie , int[][] coordonneBateauIa) throws FileNotFoundException, IOException{

        int nombreAction;
        System.out.println("Sélectionner 1, 2, ou 3. 1: Tirer \n 2: Déplacer un bateau qui n'a pas été touché \n 3: quitter et enregistrer la partie \n ");
        nombreAction = new Scanner(System.in).nextInt();
        
        switch( nombreAction ) {
            
            case 1: //tirer

                tourJoueur++;
                MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                break;
            case 2: //déplacer bateau
                int selectioni;
                int selectionj;
                System.out.println( "rentrez la coordonnee la plus à gauche si le bateau est horizontal ou la plus haute si le bateau est vertical " );
                
                System.out.print( "ligne: " );
                System.out.println( " " );
                selectioni = new Scanner(System.in).nextInt();

                System.out.print( "colonne" );
                System.out.println( " " );
                selectionj = new Scanner(System.in).nextInt();

                menuBateau(tableAllie, tableAllieTir, tableIa, tableIaTir , selectioni, selectionj , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                tourJoueur++;
                menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                break;
            case 3: //quitter et sauvegarder partie et revenir au menu  
                Sauvegarde.tabRec("tableAllie" , tableAllie);
                Sauvegarde.tabRec("tableAllieTir" , tableAllieTir);
                Sauvegarde.tabRec("tableIa" , tableIa);
                Sauvegarde.tabRec("tableIaTir" , tableIaTir);
                menu(tourJoueur);
                break;
           
            default:
                System.out.println( "Entre 1 et 3 svp" );
                menu(tourJoueur);
        }
    }

    public static void menuBateau(String [][] tableAllie, String[][] tableAllieTir, String[][] tableIa, String[][] tableIaTir , int i , int j, int tourJoueur , int[][] coordonneBateauAllie , int[][] coordonneBateauIa) throws IOException{

        int nombreAction;
        System.out.println("Sélectionner 1, 2, ou 3. 1: sousMarin \n 2: destroyer \n 3: croiseur 4: cuirasse \n ");
        nombreAction = new Scanner(System.in).nextInt();
        
        switch( nombreAction ) {
            
            case 1: //sousmarin
                SousMarin sousmarin = new SousMarin();
                if (tourJoueur%2==0){
                    String sousmarinstrg = tableAllie[i][j];
                    sousmarin.Deplacement(tableAllie, tableAllieTir, tableIa, tableIaTir , sousmarinstrg, i, j , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
                if (tourJoueur%2==1){
                    String sousmarinstrg = tableIa[i][j];
                    sousmarin.Deplacement(tableAllie, tableAllieTir, tableIa, tableIaTir ,sousmarinstrg, i, j , tourJoueur , coordonneBateauAllie , coordonneBateauIa);   
                }
                break;

            case 2: //destroyer
                Destroyer destroyer = new Destroyer();
                if (tourJoueur%2==0){
                    String destroyerstrg = tableAllie[i][j];
                    destroyer.Deplacement(tableAllie, tableAllieTir, tableIa, tableIaTir ,destroyerstrg, i, j , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
                if (tourJoueur%2==1){
                    String destroyerstrg = tableIa[i][j];
                    destroyer.Deplacement(tableAllie, tableAllieTir, tableIa, tableIaTir ,destroyerstrg, i, j , tourJoueur , coordonneBateauAllie , coordonneBateauIa);    
                }
                break;
            case 3: //croiseur  
                Croiseur croiseur = new Croiseur();
                if (tourJoueur%2==0){
                    String croiseurstrg = tableAllie[i][j];
                    croiseur.Deplacement(tableAllie, tableAllieTir, tableIa, tableIaTir ,croiseurstrg, i, j , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
                if (tourJoueur%2==1){
                    String croiseurstrg = tableIa[i][j];
                    croiseur.Deplacement(tableAllie, tableAllieTir, tableIa, tableIaTir ,croiseurstrg, i, j , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
                    
                break;

            case 4: //cuirasse
                Cuirasse cuirasse = new Cuirasse();
                if (tourJoueur%2==0){
                    String cuirassestrg =tableAllie[i][j];
                cuirasse.Deplacement(tableAllie, tableAllieTir, tableIa, tableIaTir ,cuirassestrg, i, j , tourJoueur , coordonneBateauAllie , coordonneBateauIa);    
                }
                if (tourJoueur%2==1){
                String cuirassestrg = tableIa[i][j];
                cuirasse.Deplacement(tableAllie, tableAllieTir, tableIa, tableIaTir ,cuirassestrg, i, j , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
                break; 
           
            default:
                System.out.println( "Entre 1 et 4 svp" );
                menu(tourJoueur);
        }
    }

    public static void menuDuTourIa(String [][] tableAllie, String[][] tableAllieTir, String[][] tableIa, String[][] tableIaTir , int tourJoueur , int[][] coordonneBateauAllie , int[][] coordonneBateauIa) throws IOException{

        int max=2;
        int min=1;
        int nombreAction = (int)(Math.random() * (max - min) );
        
        
        
        switch( nombreAction ) {
            
            case 1: //tirer
                
                tourJoueur++;
                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa );
                break;
            case 2: //déplacer bateau
                int maxi=14;
                int mini=0;
                
                int i = (int)(Math.random() * (maxi - mini));
                int j = (int)(Math.random() * (maxi - mini));
                menuBateau(tableAllie, tableAllieTir, tableIa, tableIaTir , i , j , tourJoueur, coordonneBateauAllie , coordonneBateauIa);
                tourJoueur++;
                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                break;
            
        }
    }

    public static void finDePartie(int[][] coordonneBateauAllie , int[][] coordonneBateauIa){ 
        
        int compteurAllie = 0; 
        int compteurIa = 0; 
        for (int i=0 ; i<10 ; i++){
            if (coordonneBateauAllie[i][4]==3 ){
                compteurAllie++;
            }
            if (coordonneBateauIa[i][4]==3){
                compteurIa++;
            }
        }

        if (compteurAllie==10){
            System.out.println("Vous avez perdu");
        }
        if (compteurIa==10){
            System.out.println("Vous avez gagne");
        }        
    }
}
