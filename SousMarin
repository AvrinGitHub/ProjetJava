/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bataillenavaleprojet.Controleur;


import bataillenavaleprojet.Modele.PlacementBateau;
import bataillenavaleprojet.Modele.Navire;
import bataillenavaleprojet.Controleur.MenuDuJeu;
import bataillenavaleprojet.Modele.Grille;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author bastien
 */
public class SousMarin extends Navire{
    
    public static boolean detecterSiOk(int i, int j , int orientation , int typeBateau , int ligneTab , int[][] coordonnee){// ligneTab pour savoir quelle ligne modifier dans coordonnee apres 
        
        for (int z=0 ; z<10 ; z++ ){
            if (coordonnee[z][0]==i && coordonnee[z][1]== j && coordonnee[z][2]==orientation && coordonnee[z][3]==typeBateau && coordonnee[z][4]==1){
               ligneTab=z;
               return true;
            }
        }
        return false;     
    }

    public static void choixSens(String [][] tableAllie, String[][] tableAllieTir, String[][] tableIa, String[][] tableIaTir ,int i, int j , int tourJoueur , int[][] coordonneBateauAllie , int[][] coordonneBateauIa) throws IOException, FileNotFoundException, EntierNegatifException, EntierTropGrand {
        int nombreChoix=0;
        int ligneTab=0 ; 
        boolean test = false; 

        if (tourJoueur%2==0){
            System.out.println("Dans quel sens souhaitez-vous dÃ©placer le sous-marin ?");
            System.out.println(" Selectionner 1, 2, 3, 4 ou 5. \n 1: Deplacer vers le haut \n 2. Deplacer vers la droite \n 3. Deplacer vers le bas \n 4. Deplacer vers la gauche \n 5. retour au menu");
            test=detecterSiOk(i , j , 1 , 1 , ligneTab , coordonneBateauAllie);
            try{//saisie avec blindage et retour au menu si erreur 
            
                    String entree = new Scanner(System.in).nextLine();
                    nombreChoix = Integer.parseInt(entree);
                    if (nombreChoix<0){
                        throw new EntierNegatifException();
        
                    }
                }
            
                catch (NumberFormatException e){
                    System.out.println("Veuillez saisir un entier.");
                }   
                catch (EntierNegatifException e2){
                    System.out.println("Veuillez saisir un entier positif.");
                }
        }
        else if (tourJoueur%2==1){
            int max = 4;
            int min = 1;
            nombreChoix = (int)(Math.random()* (max - min + min) + min);

        }
        if(test==true){
        switch( nombreChoix ) {
            case 1: //haut 
                        if (tourJoueur%2==0 && i!=0 && tableAllie[i-1][j].equals("  ")){//test deplacement joueur
                            tableAllie[i-1][j]=tableAllie[i][j];//deplacement 
                            tableAllie[i][j]="  ";
                            coordonneBateauAllie[ligneTab][0]= i-1;//modif coordonne bateau joueur 
                            Grille.afficheGrille(tableAllie);//afficher grille apres deplacement 
                            
                            
                        }
                        else if (tourJoueur%2==1 && i!=0 && tableIa[i-1][j].equals("  ")){//test deplacement possible 
                            tableIa[i-1][j]=tableIa[i][j];//deplacement 
                            tableIa[i][j]="  ";
                            coordonneBateauIa[ligneTab][0]= i-1;//modif coordonne bateau Ia
                            
                        }
                    
                        else{//si deplacement impossible retour menu 
                            System.out.println("Deplacement impossible.");
                            System.out.println("Veuillez choisir une nouvelle action.");
                            if (tourJoueur%2==0){
                                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                            }
                            else if (tourJoueur%2==1){
                                MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                            }
                        }
                break;
            case 2: //droite 
               
                        if (tourJoueur%2==0 && j!=14 && tableAllie[i][j+1].equals("  ")){//test deplacement joueur 
                            tableAllie[i][j+1]=tableAllie[i][j];//deplacement 
                            tableAllie[i][j]="  ";
                            coordonneBateauAllie[ligneTab][1]= j+1;//modif coordonne bateau 
                            Grille.afficheGrille(tableAllie);//affiche grille apres deplacement
                            
                        }
                        else if (tourJoueur%2==1 && j!=14 && tableIa[i][j+1].equals("  ")){//test deplacement ia 
                            tableIa[i][j+1]=tableIa[i][j];//deplacement 
                            tableIa[i][j]="  ";
                            coordonneBateauIa[ligneTab][1]= j+1;//modif coordonne bateau ia 
                            
                        }
                    
                        else{//si deplacement impossible retour menu 
                            System.out.println("Deplacement impossible.");
                            System.out.println("Veuillez choisir une nouvelle action.");
                            if (tourJoueur%2==0){
                                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                            }
                            else if (tourJoueur%2==1){
                                MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                            }
                        }
                break;
            case 3://bas 
                
                
                        if (tourJoueur%2==0 && i!=14 && tableAllie[i+1][j].equals("  ")){//test deplacement joueur 
                            tableAllie[i+1][j]=tableAllie[i][j];//deplacement 
                            tableAllie[i][j]="  ";
                            coordonneBateauAllie[ligneTab][0]= i+1;//modif coordonne bateau joueur
                            Grille.afficheGrille(tableAllie);//affiche grille apres deplacement 
                            
                        }
                        else if (tourJoueur%2==1 && i!=14 && tableIa[i+1][j].equals("  ")){//test deplacement ia
                            tableIa[i+1][j]=tableIa[i][j];//deplacement 
                            tableIa[i][j]="  ";
                            coordonneBateauIa[ligneTab][0]= i+1;//modif coordonne bateau ia 
                            
                        }
                    
                        else{//si deplacement impossible retour menu 
                            System.out.println("Deplacement impossible.");
                            System.out.println("Veuillez choisir une nouvelle action.");
                            if (tourJoueur%2==0){
                                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                            }
                            else if (tourJoueur%2==1){
                                MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                            }
                        }
                break;
            case 4://gauche 
                
                        if (tourJoueur%2==0 && j!=0 && tableAllie[i][j-1].equals("  ")){//test deplacement joueur 
                            tableAllie[i][j-1]=tableAllie[i][j];//deplacement 
                            tableAllie[i][j]="  ";
                            coordonneBateauAllie[ligneTab][1]= j-1;//modif coordonne bateau 
                            Grille.afficheGrille(tableAllie);//affiche grille apres deplacement 
                            
                        }
                        else if (tourJoueur%2==1 && j!=0 && tableIa[i][j-1].equals("  ")){//test deplacement ia 
                            tableIa[i][j-1]=tableIa[i][j];//deplacement 
                            tableIa[i][j]="  ";
                            coordonneBateauIa[ligneTab][1]= j-1;//modif coordonne bateau ia 
                            
                        }
                    
                        else{//si deplacement impossible retour menu 
                            System.out.println("Deplacement impossible.");
                            System.out.println("Veuillez choisir une nouvelle action.");
                            if (tourJoueur%2==0){
                                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                            }
                            else if (tourJoueur%2==1){
                                MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                            }
                        }
                break;
            case 5: //retour menu 
                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
            default:
                
                if (tourJoueur%2==0){
                    System.out.println( "Entre 1 et 5 svp" );
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
                else if (tourJoueur%2==1){
                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                }
        }
    }
        else{
            if (tourJoueur%2==0){
                System.out.println("Selection impossible");
                MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                        }
            else if (tourJoueur%2==1){
                MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
            }
        }
    }

    @Override
    public void Tir( String [][] tableAllie, String[][] tableAllieTir, String[][] tableIa, String[][] tableIaTir, int tourJoueur, int[][] coordonneBateauAllie , int[][] coordonneBateauIa) {
        int caseTiri=0,caseTirj=0;
        if (tourJoueur%2==0){
            System.out.println("Selectionnez la case sur laquelle vous souhaitez tirer :");
            
            System.out.print("Ligne : ");
            try{//demande sur la ligne avec blindage et si erreur retour menu 
            
                    String entree = new Scanner(System.in).nextLine();
                    caseTiri = Integer.parseInt(entree);
                    if (caseTiri<0){
                        throw new EntierNegatifException();
                    }
                    else if(caseTiri>14){
                        throw new EntierTropGrand();
                    }
                }
            
                catch (NumberFormatException e){
                    System.out.println("Veuillez saisir un entier.");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
                }   
                catch (EntierNegatifException e2){
                    System.out.println("Veuillez saisir un entier positif.");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                catch (EntierTropGrand e3){
                    System.out.println("entier trop grand. Entre 0 et 14 svp");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
                } 
            System.out.println("");
            System.out.print("Colonne : ");
            try{//demande sur la colonne avec blindage et si erreur retour menu 
            
                    String entree = new Scanner(System.in).nextLine();
                    caseTirj = Integer.parseInt(entree);
                    if (caseTirj<0){
                        throw new EntierNegatifException();
                    }
                    else if(caseTirj>14){
                        throw new EntierTropGrand();
                    }
                }
            
                catch (NumberFormatException e){
                    System.out.println("Veuillez saisir un entier.");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
                }   
                catch (EntierNegatifException e2){
                    System.out.println("Veuillez saisir un entier positif.");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                catch (EntierTropGrand e3){
                    System.out.println("entier trop grand. Entre 0 et 14 svp");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir, tourJoueur, coordonneBateauAllie, coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
            System.out.println("");   
        }
        else if(tourJoueur%2==1){
            int max=14;
            int min=0;
            caseTiri= (int)(Math.random()* (max - min + 1) + min );
            caseTirj= (int)(Math.random()* (max - min + 1) + min );
        }
        
        if (tourJoueur%2==0){
            if(caseTiri >= 0 && caseTiri < 15 && caseTirj >= 0 && caseTirj < 15){
            if (tableIa[caseTiri][caseTirj].equals("  ") || tableIa[caseTiri][caseTirj].equals("XX")){//test touche 
                System.out.println("Le tir a echoue. Vous n'avez rien touche.");
                
            }
            else{
                System.out.println("Touche !");
                if(tableIa[caseTiri][caseTirj].equals("SS")){//test sous marin 
                    System.out.println("Coule !");
                }
                tableAllieTir[caseTiri][caseTirj]="XX";//modif table tir 
                tableIa[caseTiri][caseTirj]="XX";//modif table ia
                PlacementBateau.TestCoule(tableIa,coordonneBateauIa);//modif coordonne bateau ia pour empecher deplacement 
                try {
                    MenuDuJeu.TestFinDePartie(tourJoueur, tableAllie, tableIa);//test tous les bateaux coules 
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            }
        if (tourJoueur%2==1){
            if(caseTiri >= 0 && caseTiri < 15 && caseTirj >= 0 && caseTirj < 15){
            if (tableAllie[caseTiri][caseTirj].equals("  ") || tableAllie[caseTiri][caseTirj].equals("XX")){//test touche 
                
                
            }
            else{
                
                tableIaTir[caseTiri][caseTirj]="XX";//modif table ia tir
                tableAllie[caseTiri][caseTirj]="XX";//modif table joueur 
                PlacementBateau.TestCoule(tableAllie,coordonneBateauAllie);//modif coordonne bateau joueur pour empecher deplacement 
                try {
                    MenuDuJeu.TestFinDePartie(tourJoueur, tableAllie, tableIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        }
            
        }
    }
    }
    
    @Override
    public void Deplacement(String[][] tableAllie, String[][] tableAllieTir, String[][] tableIa, String[][] tableIaTir, String sousmarin, int i, int j, int tourJoueur, int[][] coordonneBateauAllie, int[][] coordonneBateauIa) {
        if (sousmarin.equals("SS")){//test sur la case 
            try {         
                choixSens(tableAllie, tableAllieTir, tableIa, tableIaTir , i, j , tourJoueur, coordonneBateauAllie, coordonneBateauIa);
            } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            if (tourJoueur%2==0){
                System.out.println("Selection impossible");
                System.out.println("Recommencez");
                try {
                    MenuDuJeu.menuDuTour(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie, coordonneBateauIa );
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if (tourJoueur%2==1){
                try {
                    MenuDuJeu.menuDuTourIa(tableAllie, tableAllieTir, tableIa, tableIaTir , tourJoueur , coordonneBateauAllie , coordonneBateauIa);
                } catch (IOException | EntierNegatifException | EntierTropGrand ex) {
                    Logger.getLogger(SousMarin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
        }
    }
    
    
    }


    
    
